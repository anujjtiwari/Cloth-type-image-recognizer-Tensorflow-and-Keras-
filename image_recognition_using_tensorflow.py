# -*- coding: utf-8 -*-
"""Image Recognition using tensorflow

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1FBlYTBN-944eTtR3YsGYuCQe15SrG9E6
"""

import tensorflow as tf
import numpy as np
import matplotlib.pyplot as plt

print(tf.__version__)

dataset = tf.keras.datasets.fashion_mnist
(train_images, train_labels), (test_images, test_labels) = dataset.load_data()

len(train_images) #60,000 training images

len(test_images) #10,000 testing images (6:1)

#Using image samples in deep learning
test_labels

# In case you want to see the testing images data, here's a small LOC provided.
plt.imshow(test_images[1])
plt.colorbar()
plt.grid(False)
plt.show()

# 3 Network Layers
model = tf.keras.Sequential() # A linear stack of layers
model.add(tf.keras.layers.Flatten(input_shape = (28,28)))
model.add(tf.keras.layers.Dense(128, activation = 'relu'))
model.add(tf.keras.layers.Dense(10))

model.summary()

model.compile(optimizer='adam',
              loss = tf.keras.losses.SparseCategoricalCrossentropy(from_logits=True),
              metrics = ['accuracy']) #metrics is to check how the data is fitted into the neural network

model.fit(train_images, train_labels, epochs =10)

probability_model = tf.keras.Sequential([model, tf.keras.layers.Softmax()])
predictions = probability_model.predict(test_images)

predictions[18]

np.argmax(predictions[18])

test_labels